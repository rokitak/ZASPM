{"version":3,"sources":["utils/editable.js","components/excelPage.js","index.js"],"names":["EditableContext","React","createContext","EditableFormRow","Form","create","_ref","form","props","index","Object","objectWithoutProperties","react_default","a","createElement","Provider","value","EditableCell","_React$Component","inherits","_super","createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","concat","state","editing","toggleEdit","setState","input","focus","save","e","_this$props","record","handleSave","validateFields","error","values","currentTarget","id","objectSpread2","renderCell","_this$props2","children","dataIndex","title","es_form","Item","style","margin","getFieldDecorator","rules","required","message","initialValue","ref","node","onPressEnter","onBlur","className","paddingRight","minHeight","onClick","createClass","key","_this$props3","editable","restProps","Consumer","Component","ExcelPage","row","newData","toConsumableArray","rows","findIndex","item","splice","fileHandler","fileList","console","log","fileObj","type","errorMessage","ExcelRenderer","err","resp","newRows","slice","map","push","name","age","gender","cols","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","handleDelete","filter","handleAdd","_this$state","count","columns","render","text","popconfirm","onConfirm","icon","theme","color","fontSize","file","size","_this2","components","body","cell","col","onCell","Fragment","es_row","gutter","es_col","span","display","justifyContent","alignItems","marginBottom","href","target","rel","download","align","es_button","marginLeft","upload","beforeUpload","onRemove","multiple","marginTop","table","rowClassName","dataSource","App","excelPage_ExcelPage","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.e852384c.chunk.js","sourcesContent":["import React from 'react'\nimport {Form, Input} from 'antd'\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nexport const EditableFormRow = Form.create()(EditableRow);\n\nexport class EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} is required.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24, minHeight: 32 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Table, Button, Popconfirm, Row, Col, Icon, Upload } from \"antd\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport { EditableFormRow, EditableCell } from \"../utils/editable\";\n\nexport default class ExcelPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cols: [],\n      rows: [],\n      errorMessage: null,\n      columns: [\n        {\n          title: \"NAME\",\n          dataIndex: \"name\",\n          editable: true\n        },\n        {\n          title: \"AGE\",\n          dataIndex: \"age\",\n          editable: true\n        },\n        {\n          title: \"GENDER\",\n          dataIndex: \"gender\",\n          editable: true\n        },\n        {\n          title: \"Action\",\n          dataIndex: \"action\",\n          render: (text, record) =>\n            this.state.rows.length >= 1 ? (\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => this.handleDelete(record.key)}\n              >\n                <Icon\n                  type=\"delete\"\n                  theme=\"filled\"\n                  style={{ color: \"red\", fontSize: \"20px\" }}\n                />\n              </Popconfirm>\n            ) : null\n        }\n      ]\n    };\n  }\n\n  handleSave = row => {\n    const newData = [...this.state.rows];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, {\n      ...item,\n      ...row\n    });\n    this.setState({ rows: newData });\n  };\n\n  checkFile(file) {\n    let errorMessage = \"\";\n    if (!file || !file[0]) {\n      return;\n    }\n    const isExcel =\n      file[0].type === \"application/vnd.ms-excel\" ||\n      file[0].type ===\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    if (!isExcel) {\n      errorMessage = \"You can only upload Excel file!\";\n    }\n    console.log(\"file\", file[0].type);\n    const isLt2M = file[0].size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      errorMessage = \"File must be smaller than 2MB!\";\n    }\n    console.log(\"errorMessage\", errorMessage);\n    return errorMessage;\n  }\n\n  fileHandler = fileList => {\n    console.log(\"fileList\", fileList);\n    let fileObj = fileList;\n    if (!fileObj) {\n      this.setState({\n        errorMessage: \"No file uploaded!\"\n      });\n      return false;\n    }\n    console.log(\"fileObj.type:\", fileObj.type);\n    if (\n      !(\n        fileObj.type === \"application/vnd.ms-excel\" ||\n        fileObj.type ===\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n      )\n    ) {\n      this.setState({\n        errorMessage: \"Unknown file format. Only Excel files are uploaded!\"\n      });\n      return false;\n    }\n    //just pass the fileObj as parameter\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.log(err);\n      } else {\n        let newRows = [];\n        resp.rows.slice(1).map((row, index) => {\n          if (row && row !== \"undefined\") {\n            newRows.push({\n              key: index,\n              name: row[0],\n              age: row[1],\n              gender: row[2]\n            });\n          }\n        });\n        if (newRows.length === 0) {\n          this.setState({\n            errorMessage: \"No data found in file!\"\n          });\n          return false;\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: newRows,\n            errorMessage: null\n          });\n        }\n      }\n    });\n    return false;\n  };\n\n  handleSubmit = async () => {\n    console.log(\"submitting: \", this.state.rows);\n    //submit to API\n    //if successful, banigate and clear the data\n    //this.setState({ rows: [] })\n  };\n\n  handleDelete = key => {\n    const rows = [...this.state.rows];\n    this.setState({ rows: rows.filter(item => item.key !== key) });\n  };\n  handleAdd = () => {\n    const { count, rows } = this.state;\n    const newData = {\n      key: count,\n      name: \"User's name\",\n      age: \"22\",\n      gender: \"Female\"\n    };\n    this.setState({\n      rows: [newData, ...rows],\n      count: count + 1\n    });\n  };\n\n  render() {\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.state.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      };\n    });\n    return (\n      <>\n        <h1>Importing Excel Component</h1>\n        <Row gutter={16}>\n          <Col\n            span={8}\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginBottom: \"5%\"\n            }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <div className=\"page-title\">Upload Farmer Data</div>\n            </div>\n          </Col>\n          <Col span={8}>\n            <a\n              href=\"https://res.cloudinary.com/bryta/raw/upload/v1562751445/Sample_Excel_Sheet_muxx6s.xlsx\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              download\n            >\n              Sample excel sheet\n            </a>\n          </Col>\n          <Col\n            span={8}\n            align=\"right\"\n            style={{ display: \"flex\", justifyContent: \"space-between\" }}\n          >\n            {this.state.rows.length > 0 && (\n              <>\n                <Button\n                  onClick={this.handleAdd}\n                  size=\"large\"\n                  type=\"info\"\n                  style={{ marginBottom: 16 }}\n                >\n                  <Icon type=\"plus\" />\n                  Add a row\n                </Button>{\" \"}\n                <Button\n                  onClick={this.handleSubmit}\n                  size=\"large\"\n                  type=\"primary\"\n                  style={{ marginBottom: 16, marginLeft: 10 }}\n                >\n                  Submit Data\n                </Button>\n              </>\n            )}\n          </Col>\n        </Row>\n        <div>\n          <Upload\n            name=\"file\"\n            beforeUpload={this.fileHandler}\n            onRemove={() => this.setState({ rows: [] })}\n            multiple={false}\n          >\n            <Button>\n              <Icon type=\"upload\" /> Click to Upload Excel File\n            </Button>\n          </Upload>\n        </div>\n        <div style={{ marginTop: 20 }}>\n          <Table\n            components={components}\n            rowClassName={() => \"editable-row\"}\n            dataSource={this.state.rows}\n            columns={columns}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport ExcelPage from \"./components/excelPage\";\n\nfunction App() {\n  return (\n    <>\n      <ExcelPage />\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}